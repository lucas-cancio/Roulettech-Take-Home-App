name: Deploy React App to S3 with Docker

on:
  push:
    branches:
      - main  # or the branch you want to deploy from
    paths:
      - 'frontend/**'
      - 'backend/**'

jobs:
  deploy-frontend:
    if: contains(github.event.head_commit.message, '[frontend]')
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: docker build -t my-react-app -f frontend/DockerFile .

    - name: Run Docker container and copy build files
      run: |
        docker run --name react-app my-react-app
        docker cp react-app:/app/frontend/build ./build
        docker rm -f react-app

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  # specify your AWS region

    - name: Deploy to S3
      run: aws s3 sync build/ s3://${{ secrets.S3_BUCKET_NAME }} --delete
  
  deploy-backend:
    if: contains(github.event.head_commit.message, '[backend]')
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image for backend
      run: docker build -t recipe-django-app:backend -f backend/Dockerfile .

    - name: Push Docker image to Docker Hub
      run: docker push recipe-django-app:backend

    - name: Build and push Docker images
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/recipe-django-app:latest

    
    - name: Deploy to EC2
      env:
        EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        EC2_SSH_HOST: ${{ secrets.EC2_SSH_HOST }}
        EC2_SSH_USERNAME: ${{ secrets.EC2_SSH_USERNAME }}
      run: |
        echo "${EC2_SSH_PRIVATE_KEY}" > private_key.pem
        chmod 600 private_key.pem
        scp -o StrictHostKeyChecking=no -i private_key.pem -r . $EC2_SSH_USERNAME@$EC2_SSH_HOST:/home/youruser/docker-app
        ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_SSH_USERNAME@$EC2_SSH_HOST << 'EOF   
          echo "DEBUG=False" > .env
          echo "DJANGO_JWT_SECRET_KEY=django-insecure-+$gbz!$%&vy^qk3$zrq08r(gg1%uf3ghsm2)q0j20ftk!yf-$!" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=rouletterecipe" >> .env
          echo "DB_USER=lucascancio" >> .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_ENGINE=django.db.backends.postgresql" >> .env

          docker pull ${{ secrets.DOCKER_USERNAME }}/recipe-django-app:latest
          cd /backend/
          docker-compose down
          docker-compose up -d
        EOF
